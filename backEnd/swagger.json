{
  "openapi": "3.0.0",
  "info": {
    "title": "API desenvolvida para prova prática da Codin",
    "description": "Esta API tem como objetivo demonstrar o meu conhecimento em relação aos desafios propostos.",
    "termsOfService": "aa",
    "contact": {
      "email": "w.wutaes@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "API de test"
    }
  ],
  "paths": {
    "/processos-judiciais/": {
      "get": {
        "sumary": "Pegar todos os processos cadastrados",
        "description": "Essa rota será responsável por pegar todos os processos",
        "tags": [
          "ProcessoJudicial"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessoJudicial"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "sumary": "Cadastro de um novo processo",
        "description": "Essa rota será responsável por cadastrar novos processos",
        "tags": [
          "ProcessoJudicial"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessoJudicial"
              },
              "examples": {
                "processos": {
                  "value": {
                    "numeroprocesso": "12345",
                    "parte": "123",
                    "responsavel": "473",
                    "documentos": [
                      {
                        "_id": "769b40bb-95c4-4a3f-a631-60e251008862",
                        "nome": "Provas2",
                        "caminho": "C:\\Users\\User\\Downloads\\provas.docx",
                        "extensao": "Docx"
                      }
                    ],
                    "tema": "plagio",
                    "valorcausa": 15000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Erro ao criar processo judicial"
          },
          "201": {
            "description": "ok"
          }
        }
      },
      "put": {
        "sumary": "Modificar processos judiciais",
        "description": "Essa rota tem como objetivo modificar as informações dos processos judiciais",
        "tags": [
          "ProcessoJudicial"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "valorcausa": "Valor da Causa",
            "in": "query",
            "description": "Valor que será alterado no processo",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "newEmail": "string",
                "$ref": "#/components/schemas/ProcessoJudicial"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "500": {
            "description": "Erro ao atualizar valor do processo judicial"
          }
        }
      }
    },
    "/processos-judiciais/delete/:numero": {
      "delete": {
        "sumary": "Remover processo",
        "description": "Essa rota tem como objetivo remover um processo",
        "tags": [
          "ProcessoJudicial"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "numeroprocesso": "Numero do processo",
            "in": "query",
            "description": "Numero do processo que vai ser removido",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Ok"
          },
          "500": {
            "description": "Erro ao excluir processo judicial por número de processo"
          },
          "404": {
            "description": "Processo judicial não encontrado"
          }
        }
      }
    },
    "/processo-judicial/processo/cliente/:cpf": {
      "get": {
        "sumary": "Encontrar um processo a partir do cpf do cliente",
        "description": "Essa rota será responsável por encontrar um processo pelo cpf do cliente",
        "tags": [
          "ProcessoJudicial"
        ],
        "parameters": [
          {
            "cpf": "cpf",
            "in": "query",
            "description": "cpf do cliente para busca",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessoJudicial"
                }
              }
            }
          },
          "404": {
            "description": "Processo judicial não encontrado"
          },
          "500": {
            "description": "Erro ao buscar processo judicial por cpf do cliente"
          }
        }
      }
    },
    "/processo-judicial/processo/advogado/:cpf": {
      "get": {
        "sumary": "Encontrar um processo a partir do cpf do advogado",
        "description": "Essa rota será responsável por encontrar um processo pelo cpf do advogado",
        "tags": [
          "ProcessoJudicial"
        ],
        "parameters": [
          {
            "cpf": "cpf",
            "in": "query",
            "description": "cpf do advogado para busca",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessoJudicial"
                }
              }
            }
          },
          "404": {
            "description": "Processo judicial não encontrado"
          },
          "500": {
            "description": "Erro ao buscar processo judicial por cpf do advogado"
          }
        }
      }
    },
    "/documento/": {
      "get": {
        "sumary": "Pegar todos os documentos",
        "description": "Essa rota será responsável por pegar todos os documentos",
        "tags": [
          "Documentos"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Documento"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao listar documentos"
          }
        }
      },
      "post": {
        "sumary": "Cadastro de documentos",
        "description": "Essa rota será responsável por cadastrar novos documentos",
        "tags": [
          "Documentos"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Documento"
              },
              "examples": {
                "documento": {
                  "value": {
                    "nome": "Provas",
                    "caminho": "C:\\Users\\User\\Downloads\\provas.pdf",
                    "extensao": "PDF"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/documento/nome/:nome": {
      "get": {
        "sumary": "Pegar todos os documentos pelo nome",
        "description": "Essa rota será responsável por pegar todos os documentos pelo nome",
        "tags": [
          "Documentos"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Documento"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao listar clientes"
          }
        }
      }
    },
    "/cliente/": {
      "get": {
        "sumary": "Pegar todos os clientes",
        "description": "Essa rota será responsável por pegar todos os clientes",
        "tags": [
          "cliente"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cliente"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao criar cliente"
          }
        }
      },
      "post": {
        "sumary": "Cadastro de cliente",
        "description": "Essa rota será responsável por cadastrar novos cliente",
        "tags": [
          "cliente"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cliente"
              },
              "examples": {
                "cliente": {
                  "value": {
                    "nome": "Oten",
                    "cpf": "123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cliente/cpf/:cpf": {
      "get": {
        "sumary": "Pegar todos os cliente pelo cpf",
        "description": "Essa rota será responsável por pegar o cliente pelo cpf",
        "tags": [
          "cliente"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cliente"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao listar cliente"
          }
        }
      }
    },
    "/cliente/:id": {
      "get": {
        "sumary": "Pegar todos os Cliente pelo id",
        "description": "Essa rota será responsável por pegar o cliente pelo id",
        "tags": [
          "cliente"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cliente"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao listar cliente"
          }
        }
      }
    },
    "/advogado/": {
      "get": {
        "sumary": "Pegar todos os Advogados",
        "description": "Essa rota será responsável por pegar todos os Advogados",
        "tags": [
          "Advogado"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Advogado"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao criar Advogado"
          }
        }
      },
      "post": {
        "sumary": "Cadastro de advogado",
        "description": "Essa rota será responsável por cadastrar novos Advogado",
        "tags": [
          "Advogado"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advogado"
              },
              "examples": {
                "Advogado": {
                  "value": {
                    "nome": "Unaldo",
                    "cpf": "473",
                    "oab": "473"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/advogado/cpf/:cpf": {
      "get": {
        "sumary": "Pegar todos os advogado pelo cpf",
        "description": "Essa rota será responsável por pegar o Advogado pelo cpf",
        "tags": [
          "Advogado"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Advogado"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao listar advogados"
          }
        }
      }
    },
    "/advogado/:id": {
      "get": {
        "sumary": "Pegar todos os advogado pelo id",
        "description": "Essa rota será responsável por pegar o Advogado pelo id",
        "tags": [
          "Advogado"
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Advogado"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao listar advogados"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProcessoJudicial": {
        "type": "object",
        "properties": {
          "numeroprocesso": {
            "type": "string"
          },
          "parte": {
            "type": "string"
          },
          "responsavel": {
            "type": "string"
          },
          "documentos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Documento"
            }
          },
          "tema": {
            "type": "string"
          },
          "valorcausa": {
            "type": "number"
          }
        }
      },
      "Cliente": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "nome": {
            "type": "string",
            "required": true
          },
          "cpf": {
            "type": "string",
            "required": true,
            "unique": true
          },
          "senha": {
            "type": "string",
            "required": true,
            "select": false
          }
        },
        "required": [
          "nome",
          "cpf",
          "senha"
        ]
      },
      "Advogado": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "nome": {
            "type": "string",
            "required": true
          },
          "cpf": {
            "type": "string",
            "required": true,
            "unique": true
          },
          "oab": {
            "type": "string",
            "required": true,
            "unique": true
          },
          "senha": {
            "type": "string",
            "required": true,
            "select": false
          }
        },
        "required": [
          "nome",
          "cpf",
          "senha"
        ]
      },
      "Documento": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "nome": {
            "type": "string",
            "required": true,
            "unique": true
          },
          "caminho": {
            "type": "string",
            "required": true
          },
          "extensao": {
            "type": "string",
            "required": true
          }
        },
        "required": [
          "nome",
          "caminho",
          "extensao"
        ]
      }
    }
  }
}